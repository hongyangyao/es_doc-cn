ifndef::es_build[= placeholder0]

[[getting-started]]
[role="pagenumrestart"]
= 基础入门

[partintro]
--
_Elasticsearch_ 是一个实时的分布式搜索分析引擎，((("Elasticsearch", "defined")))它能让你以前所未有的速度和规模，去探索你的数据。
它被用作全文检索、结构化搜索、分析以及这三个功能的组合：

*   Wikipedia 使用 Elasticsearch 提供带有高亮片段的全文搜索，还有 _search-as-you-type_ 和 _did-you-mean_ 的建议。

*   _卫报_ 使用 Elasticsearch 将网络社交数据结合到访客日志中，为它的编辑们提供公众对于新文章的实时反馈。

*   Stack Overflow 将地理位置查询融入全文检索中去，并且使用 _more-like-this_ 接口去查找相关的问题和回答。

*   GitHub 使用 Elasticsearch 对1300亿行代码进行查询。

Elasticsearch 不仅仅为巨头公司服务。它也帮助了很多初创公司，比如 Datadog 和 Klout，
Elasticsearch 帮助他们将想法用原型实现，并转化为可扩展的解决方案。Elasticsearch 能运行在你的笔记本电脑上，或者扩展到数百台服务器上来处理PB级数据。

Elasticsearch 中没有一个单独的组件是全新的或者是革命性的。((("full text search")))全文搜索很久之前就已经可以做到了，
就像很早之前出现的分析系统((("distributed databases")))((("analytics systems")))和分布式数据库。
革命性的成果在于将这些单独的，有用的组件融合到一个单一的、一致的、实时的应用中。对于初学者而言它的门槛相对较低，
而当你的技能提升或需求增加时，它也始终能满足你的需求。

如果你现在打开这本书，是因为你拥有数据。除非你准备使用它 _做些什么_ ，否则拥有这些数据将没有意义。

不幸的是，大部分数据库在从你的数据中提取可用知识时出乎意料的低效。((("databases", "ineptness at extracting actionable data")))
当然，你可以通过时间戳或精确值进行过滤，但是它们能够全文检索、处理同义词、通过相关性给文档评分么？
它们能从同样的数据中生成分析与聚合数据吗？最重要的是，它们能实时地做到上述操作，而不经过大型批处理的任务么？

这就是 Elasticsearch 脱颖而出的地方：Elasticsearch 鼓励你去探索与利用数据，而不是因为查询数据太困难，就让它们烂在数据仓库里面。

Elasticsearch 将成为你最好的朋友。
--

include::010_Intro.asciidoc[]

include::020_Distributed_Cluster.asciidoc[]

include::030_Data_In_Data_Out.asciidoc[]

include::040_Distributed_CRUD.asciidoc[]

include::050_Search.asciidoc[]

include::052_Mapping_Analysis.asciidoc[]

include::054_Query_DSL.asciidoc[]

include::056_Sorting.asciidoc[]

include::060_Distributed_Search.asciidoc[]

include::070_Index_Mgmt.asciidoc[]

include::075_Inside_a_shard.asciidoc[]
