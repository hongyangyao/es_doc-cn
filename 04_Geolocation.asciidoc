ifndef::es_build[= placeholder4]

[[geoloc]]
= 地理位置

[partintro]
--
我们拿着纸质地图漫步城市的日子一去不返了。得益于智能手机，我们现在总是可以知道 ((("geolocation")))自己所处的准确位置，也预料到网站会使用这些信息。我想知道从当前位置步行 5 分钟内可到的那些餐馆，对伦敦更大范围内的其他餐馆并不感兴趣。

但地理位置功能仅仅是 Elasticsearch 的冰山一角，Elasticsearch 的妙处在于，它让你可以把地理位置、全文搜索、结构化搜索和分析结合到一起。

例如：告诉我提到 _vitello tonnato_ 这种食物、步行 5 分钟内可到、且晚上 11 点还营业的餐厅，然后结合用户评价、距离、价格排序。另一个例子：给我展示一幅整个城市8月份可用假期出租物业的地图，并计算出每个区域的平均价格。

Elasticsearch 提供了 ((("Elasticsearch", "representing geolocations")))两种表示地理位置的方式：用纬度－经度表示的坐标点使用 `geo_point` 字段类型，((("geo_point field type"))) 以
http://en.wikipedia.org/wiki/GeoJSON[GeoJSON] 格式定义的复杂地理形状，使用 `geo_shape` 字段类型。((("geo_shape field type")))

_Geo-points_ 允许你找到距离另一个坐标点一定范围内的坐标点、计算出两点之间的距离来排序或进行相关性打分、或者聚合到显示在地图上的一个网格。另一方面，_Geo-shapes_ 纯粹是用来过滤的。它们可以用来判断两个地理形状是否有重合或者某个地理形状是否完全包含了其他地理形状。

--

include::310_Geopoints.asciidoc[]

include::320_Geohashes.asciidoc[]

include::330_Geo_aggs.asciidoc[]

include::340_Geoshapes.asciidoc[]
