[[index-aliases]]
=== 索引别名和零停机

在前面提到的，重建索引的问题是必须更新应用中的索引名称。 ((("index aliases")))  索引别名就是用来解决这个问题的！

索引 _别名_ 就像一个快捷方式或软连接，可以指向一个或多个索引，也可以给任何一个需要索引名的API来使用。_别名_ ((("aliases, index"))) 带给我们极大的灵活性，允许我们做下面这些：

 * 在运行的集群中可以无缝的从一个索引切换到另一个索引
 * 给多个索引分组 (例如， `last_three_months`)
 * 给索引的一个子集创建 `视图`

在后面我们会讨论更多关于别名的使用。现在，我们将解释怎样使用别名在零停机下从旧索引切换到新索引。

有两种方式管理别名： `_alias` 用于单个操作， `_aliases` 用于执行多个原子级操作。

在本章中，我们假设你的应用有一个叫 `my_index` 的索引。事实上， `my_index` 是一个指向当前真实索引的别名。真实索引包含一个版本号： `my_index_v1` ， `my_index_v2` 等等。

首先，创建索引 `my_index_v1` ，然后将别名 
`my_index` 指向它：

[source,js]
--------------------------------------------------
PUT /my_index_v1 <1>
PUT /my_index_v1/_alias/my_index <2>
--------------------------------------------------
// SENSE: 070_Index_Mgmt/55_Aliases.json

<1> 创建索引 `my_index_v1` 。
<2> 设置别名 `my_index` 指向 `my_index_v1` 。

你可以检测这个别名指向哪一个索引：

[source,js]
--------------------------------------------------
GET /*/_alias/my_index
--------------------------------------------------
// SENSE: 070_Index_Mgmt/55_Aliases.json

或哪些别名指向这个索引：

[source,js]
--------------------------------------------------
GET /my_index_v1/_alias/*
--------------------------------------------------
// SENSE: 070_Index_Mgmt/55_Aliases.json

两者都会返回下面的结果：

[source,js]
--------------------------------------------------
{
    "my_index_v1" : {
        "aliases" : {
            "my_index" : { }
        }
    }
}
--------------------------------------------------


然后，我们决定修改索引中一个字段的映射。当然，我们不能修改现存的映射，所以我们必须重新索引数据。 ((("reindexing", "using index aliases")))  首先, 我们用新映射创建索引 `my_index_v2` ：

[source,js]
--------------------------------------------------
PUT /my_index_v2
{
    "mappings": {
        "my_type": {
            "properties": {
                "tags": {
                    "type":   "string",
                    "index":  "not_analyzed"
                }
            }
        }
    }
}
--------------------------------------------------
// SENSE: 070_Index_Mgmt/55_Aliases.json

然后我们将数据从 `my_index_v1` 索引到 `my_index_v2` ，下面的过程在 <<reindex>> 中已经描述过。一旦我们确定文档已经被正确地重索引了，我们就将别名指向新的索引。

一个别名可以指向多个索引，所以我们在添加别名到新索引的同时必须从旧的索引中删除它。这个操作需要原子化，这意味着我们需要使用 `_aliases` 操作：

[source,js]
--------------------------------------------------
POST /_aliases
{
    "actions": [
        { "remove": { "index": "my_index_v1", "alias": "my_index" }},
        { "add":    { "index": "my_index_v2", "alias": "my_index" }}
    ]
}
--------------------------------------------------
// SENSE: 070_Index_Mgmt/55_Aliases.json


你的应用已经在零停机的情况下从旧索引迁移到新索引了。

[TIP]
====
即使你认为现在的索引设计已经很完美了，在生产环境中，还是有可能需要做一些修改的。

做好准备：在你的应用中使用别名而不是索引名。然后你就可以在任何时候重建索引。别名的开销很小，应该广泛使用。
====
