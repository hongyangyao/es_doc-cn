[[_tuning_best_fields_queries]]
=== 最佳字段查询调优

当用户搜索 “quick pets” 时会发生什么呢？((("multifield search", "best fields queries", "tuning")))((("best fields queries", "tuning")))在前面的例子中，两个文档都包含词 `quick` ，但是只有文档 2 包含词 `pets` ，两个文档中都不具有同时包含 _两个词_ 的 _相同字段_ 。

如下，一个简单的 `dis_max` 查询会采用单个最佳匹配字段，((("dis_max (disjunction max) query")))((("relevance scores", "calculation in dis_max queries")))而忽略其他的匹配：

[source,js]
--------------------------------------------------
{
    "query": {
        "dis_max": {
            "queries": [
                { "match": { "title": "Quick pets" }},
                { "match": { "body":  "Quick pets" }}
            ]
        }
    }
}
--------------------------------------------------
// SENSE: 110_Multi_Field_Search/15_Best_fields.json

[source,js]
--------------------------------------------------
{
  "hits": [
     {
        "_id": "1",
        "_score": 0.12713557, <1>
        "_source": {
           "title": "Quick brown rabbits",
           "body": "Brown rabbits are commonly seen."
        }
     },
     {
        "_id": "2",
        "_score": 0.12713557, <1>
        "_source": {
           "title": "Keeping pets healthy",
           "body": "My quick brown fox eats rabbits on a regular basis."
        }
     }
   ]
}
--------------------------------------------------
<1> 注意两个评分是完全相同的。

我们可能期望同时匹配 `title` 和 `body` 字段的文档比只与一个字段匹配的文档的相关度更高，但事实并非如此，因为 `dis_max` 查询只会简单地使用 _单个_ 最佳匹配语句的评分 `_score` 作为整体评分。

==== tie_breaker 参数

可以通过指定 `tie_breaker` ((("tie_breaker parameter")))这个参数将其他匹配语句的评分也考虑其中：((("dis_max (disjunction max) query", "using tie_breaker parameter")))((("relevance scores", "calculation in dis_max queries", "using tie_breaker parameter")))

[source,js]
--------------------------------------------------
{
    "query": {
        "dis_max": {
            "queries": [
                { "match": { "title": "Quick pets" }},
                { "match": { "body":  "Quick pets" }}
            ],
            "tie_breaker": 0.3
        }
    }
}
--------------------------------------------------
// SENSE: 110_Multi_Field_Search/15_Best_fields.json

结果如下：

[source,js]
--------------------------------------------------
{
  "hits": [
     {
        "_id": "2",
        "_score": 0.14757764, <1>
        "_source": {
           "title": "Keeping pets healthy",
           "body": "My quick brown fox eats rabbits on a regular basis."
        }
     },
     {
        "_id": "1",
        "_score": 0.124275915, <1>
        "_source": {
           "title": "Quick brown rabbits",
           "body": "Brown rabbits are commonly seen."
        }
     }
   ]
}
--------------------------------------------------
<1> 文档 2 的相关度比文档 1 略高。

`tie_breaker` 参数提供了一种 `dis_max` 和 `bool` 之间的折中选择，它的评分方式如下：

1. 获得最佳匹配语句的评分 `_score` 。
2. 将其他匹配语句的评分结果与 `tie_breaker` 相乘。
3. 对以上评分求和并规范化。

有了 `tie_breaker` ，会考虑所有匹配语句，但最佳匹配语句依然占最终结果里的很大一部分。

[NOTE]
====
`tie_breaker` 可以是 `0` 到 `1` 之间的浮点数，其中 `0` 代表使用 `dis_max` 最佳匹配语句的普通逻辑，((("tie_breaker parameter", "value of"))) `1` 表示所有匹配语句同等重要。最佳的精确值需要根据数据与查询调试得出，但是合理值应该与零接近（处于 `0.1 - 0.4` 之间），这样就不会颠覆 `dis_max` 最佳匹配性质的根本。
====
